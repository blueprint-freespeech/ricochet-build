#!/bin/bash
set -x
[% c("var/set_default_env") -%]
[% pc(c('var/compiler'), 'var/setup', { compiler_tarfile => c('input_files_by_name/' _ c('var/compiler')) }) %]
distdir=/var/tmp/dist/[% project %]
mkdir -p /var/tmp/build
tar -C /var/tmp/build -xf [% project %]-[% c('version') %].tar.gz
cd /var/tmp/build/[% project %]-[% c('version') %]
[% IF c("var/osx") -%]
  # Tricking OpenSSL into using our clang as cross-compiler
  ln -s $clangdir/bin/clang $clangdir/bin/x86_64-apple-darwin-cc
  export CC=cc
[% END -%]
[% IF c("var/windows") -%]
  patch -p1 < $rootdir/use-SOURCE_DATE_EPOCH.patch
[% END -%]
export SOURCE_DATE_EPOCH='[% c("timestamp") %]'
./Configure [% c('var/configure_opts') %] [% c('var/CFLAGS') %]
make -j[% c("buildconf/num_procs") %]
make DESTDIR="$distdir" install
cd /var/tmp/dist
ln -s '[% c("var/openssldir") %]' openssl/openssl
[% c('tar', {
        tar_src => [ project ],
        tar_args => '-czf ' _ dest_dir _ '/' _ c('filename'),
    }) %]
