#!/bin/bash

# https://dexp.in/articles/qtcreator-crosscompile/

set -x
[% c("var/set_default_env") -%]
[% pc(c('var/compiler'), 'var/setup', { compiler_tarfile => c('input_files_by_name/' _ c('var/compiler')) }) %]
distdir=/var/tmp/dist/[% project %]

# clang needs to be reminded where it's c++ includes are
[% IF c("var/osx") -%]
cppincludes=/var/tmp/dist/macosx-toolchain/clang/include/c++/v1
ln -s /var/tmp/dist/macosx-toolchain/cctools/bin/x86_64-apple-darwin-libtool /var/tmp/dist/macosx-toolchain/cctools/bin/libtool
[% END -%]

# build qt
mkdir -p /var/tmp/build
tar -C /var/tmp/build -xf qt-everywhere-src-[% c('version') %].tar.xz

cd /var/tmp/build/qt-everywhere-src-[% c('version') %]

# xcode mocks for macOS
[% IF c("var/osx") -%]
patch -p1 < $rootdir/fix_hardcode_xcode_paths.patch
patch -p1 < $rootdir/fix_deployment_target.patch

# OpenGL patch for macos
patch -p1 < $rootdir/fix_opengl_linker_error.patch

# Fix the issue where whitespaces get ignored after certain character
patch -p1 < $rootdir/macos_font_shaping.patch
[% END -%]

[% IF c("var/linux-x86_64") %]
    # https://bugreports.qt.io/browse/QTBUG-85922
    sed -i "s/X11R6\///g"  qtbase/mkspecs/linux-g++-64/qmake.conf
[% END -%]

[% IF !c("var/linux") %]
 ./configure \
    -verbose \
    -[% IF c("var/osx") -%]ext[% END -%]prefix "$distdir" \
    -release \
    -opensource \
    -confirm-license \
    -no-shared \
    -static \
    [% IF c("var/windows") %]-static-runtime[% END -%] \
    -no-qml-debug \
    -no-glib \
    -no-openssl \
    [% IF c("var/windows") %]-no-opengl[% END -%] \
    -no-fontconfig \
    -no-icu \
    -qt-pcre \
    -qt-zlib \
    -qt-libpng \
    -qt-libjpeg \
    -nomake tools \
    -nomake examples \
    -nomake tests \
    -xplatform [% c('var/xplatform') %] \
    -device-option CROSS_COMPILE=[% c('var/cross_compile') %] \
    -skip qt3d \
    -skip qtactiveqt \
    -skip qtandroidextras \
    -skip qtcharts \
    -skip qtconnectivity \
    -skip qtdatavis3d \
    -skip qtdoc \
    -skip qtgamepad \
    -skip qtlocation \
    -skip qtlottie \
    -skip qtnetworkauth \
    -skip qtpurchasing \
    -skip qtquick3d \
    -skip qtquicktimeline \
    -skip qtremoteobjects \
    -skip qtscript \
    -skip qtscxml \
    -skip qtsensors \
    -skip qtserialbus \
    -skip qtserialport \
    -skip qtspeech \
    -skip qtsvg \
    -skip qtvirtualkeyboard \
    -skip qtwayland \
    -skip qtwebchannel \
    -skip qtwebengine \
    -skip qtwebglplugin \
    -skip qtwebsockets \
    -skip qtwebview \
    -skip qtxmlpatterns \
    [% IF c("var/osx") -%]-I $cppincludes -sysroot $sysrootdir [% END -%]

[% ELSE -%]
    ./configure \
        -confirm-license \
        -opensource \
        -release \
        -static \
        -prefix "$distdir" \
        -nomake tools \
        -nomake examples \
        -nomake tests \
        -no-openssl \
        -no-opengl \
        -no-icu \
        -qt-pcre \
        -qt-zlib \
        -qt-libpng \
        -qt-libjpeg \
        -feature-freetype \
        -fontconfig \
        -skip qt3d \
        -skip qtactiveqt \
        -skip qtandroidextras \
        -skip qtcharts \
        -skip qtconnectivity \
        -skip qtdatavis3d \
        -skip qtdoc \
        -skip qtgamepad \
        -skip qtlocation \
        -skip qtlottie \
        -skip qtmacextras \
        -skip qtnetworkauth \
        -skip qtpurchasing \
        -skip qtquick3d \
        -skip qtquicktimeline \
        -skip qtremoteobjects \
        -skip qtscript \
        -skip qtscxml \
        -skip qtsensors \
        -skip qtserialbus \
        -skip qtserialport \
        -skip qtspeech \
        -skip qtsvg \
        -skip qtvirtualkeyboard \
        -skip qtwebchannel \
        -skip qtwebengine \
        -skip qtwebglplugin \
        -skip qtwebsockets \
        -skip qtwebview \
        -skip qtx11extras \
        -skip qtxmlpatterns \
        -xcb-xlib \
        -xcb \
        -qpa xcb \
        -xplatform [% c('var/xplatform') %] \
        -device-option CROSS_COMPILE=[% c('var/cross_compile') %]
[% END -%]

make -j[% c("buildconf/num_procs") %]
make install

cd /var/tmp/dist
[% c('tar', {
        tar_src => [ project ],
        tar_args => '-czf ' _ dest_dir _ '/' _ c('filename'),
    }) %]